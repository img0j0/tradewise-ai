services:
  - type: web
    name: tradewise-ai
    env: python
    plan: starter
    buildCommand: pip install -r requirements_production.txt
    startCommand: gunicorn --bind 0.0.0.0:$PORT --workers 2 --timeout 120 main:app
    healthCheckPath: /api/health
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: FLASK_ENV
        value: production
      - key: DEBUG
        value: false
      - key: SESSION_SECRET
        generateValue: true
      - key: DATABASE_URL
        sync: false
      - key: REDIS_URL
        fromService:
          type: redis
          name: tradewise-redis
          property: connectionString
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: SMTP_SERVER
        value: smtp.gmail.com
      - key: SMTP_PORT
        value: 587
      - key: SMTP_USERNAME
        sync: false
      - key: SMTP_PASSWORD
        sync: false
      - key: ADMIN_EMAILS
        value: tradewise.founder@gmail.com
      - key: ERROR_NOTIFICATIONS_ENABLED
        value: true
      - key: PREMIUM_FEATURES_ENABLED
        value: true
      - key: ADVANCED_ANALYTICS_ENABLED
        value: true
      - key: LOG_LEVEL
        value: INFO
      - key: ASYNC_WORKER_COUNT
        value: 3

  - type: worker
    name: tradewise-worker
    env: python
    plan: starter
    buildCommand: pip install -r requirements_production.txt
    startCommand: python worker_start.py
    envVars:
      - key: ENVIRONMENT
        value: production
      - key: DATABASE_URL
        sync: false
      - key: REDIS_URL
        fromService:
          type: redis
          name: tradewise-redis
          property: connectionString
      - key: WORKER_TYPE
        value: background
      - key: LOG_LEVEL
        value: INFO

  - type: redis
    name: tradewise-redis
    plan: starter
    maxmemoryPolicy: allkeys-lru
    ipAllowList:
      - source: 0.0.0.0/0
